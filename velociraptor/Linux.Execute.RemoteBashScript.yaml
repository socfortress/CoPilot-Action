name: Linux.Execute.RemoteBashScript
description: |
  Downloads and executes a Bash script from a GitHub repository.
  Supports up to 6 arguments, exported as environment variables (ARG1â€“ARG6) for the script.
  Always runs via `bash` explicitly to avoid shebang or CRLF issues.
  Captures stdout, stderr, exit status, and the full active-responses.log for later processing.
author: socfortress
type: CLIENT

parameters:
  - name: RepoURL
    type: string
    description: Base URL of raw GitHub repo (e.g., https://raw.githubusercontent.com/socfortress/Repo-to-hold-linux-activeresponse/main)
    default: https://raw.githubusercontent.com/socfortress/Repo-to-hold-linux-activeresponse/main

  - name: ScriptName
    type: string
    description: Bash script to fetch and execute (e.g., block-unblock-ip.sh)
    default: collect-suspicious-users-groups.sh

  - name: Arg1
    type: string
    default: ""
    description: Optional first argument (exported as ARG1).

  - name: Arg2
    type: string
    default: ""
    description: Optional second argument (exported as ARG2).

  - name: Arg3
    type: string
    default: ""
  - name: Arg4
    type: string
    default: ""
  - name: Arg5
    type: string
    default: ""
  - name: Arg6
    type: string
    default: ""

sources:
  - name: ScriptExecution
    description: Download, save, export arguments, and run the Bash script explicitly.
    query: |
      LET script_url = RepoURL + ScriptName

      SELECT timestamp(epoch=now()),
             Stdout,
             Stderr,
             Status,
             script_url AS SourceScript
      FROM execve(
        argv=[
          "bash",
          "-c",
          "curl -s -o /tmp/" + ScriptName + " " + script_url + " && chmod +x /tmp/" + ScriptName + "; " +
          "export ARG1='" + Arg1 + "' ARG2='" + Arg2 + "' ARG3='" + Arg3 + "' ARG4='" + Arg4 + "' ARG5='" + Arg5 + "' ARG6='" + Arg6 + "'; " +
          "bash /tmp/" + ScriptName
        ]
      )

  - name: CollectedLogs
    description: Return the full active-responses.log for offline processing.
    query: |
      SELECT timestamp(epoch=now()),
             read_file(filename="/var/ossec/active-response/active-responses.log") AS LogContent
      FROM scope()
